{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trist\\\\Documents\\\\DROP\\\\Drop\\\\frontend\\\\client\\\\src\\\\UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './UserPage.css';\nimport { FaLock, FaLockOpen } from 'react-icons/fa';\nimport { FaDownload } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const collectionCount = 10;\n  const [generatedImagesCount, setGeneratedImagesCount] = useState(0);\n  const username = \"SuperChicken\"; // Username\n  const profileImageUrl = \"https://img.freepik.com/vecteurs-premium/conception-mascotte-poulet-fort-dessin-anime_194935-13.jpg\"; // Profile Image URL\n  const [activeTab, setActiveTab] = useState('collections'); // State to track active tab\n\n  const [newCollectionName, setNewCollectionName] = useState('');\n  const [feedbackMessage, setFeedbackMessage] = useState('');\n  const [collections, setCollections] = useState([]);\n  const [clickedCollectionId, setClickedCollectionId] = useState(null);\n  const [clickedImageId, setClickedImageId] = useState(null);\n  const [UserImages, setUserImages] = useState([]);\n  const [selectedCollectionForImage, setSelectedCollectionForImage] = useState(null);\n  const handleCollectionClick = (event, collectionId) => {\n    if (event.target.className === 'modal') {\n      setClickedCollectionId(null);\n    } else {\n      setClickedCollectionId(collectionId);\n    }\n  };\n  const handleCreateCollection = async e => {\n    e.preventDefault();\n    let userID = \"1\";\n    try {\n      const response = await fetch('http://localhost:3000/api/collection/createCollection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newCollectionName,\n          idCreator: userID\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create collection');\n      }\n      const newCollection = await response.json();\n      setFeedbackMessage(`Collection \"${newCollection.name}\" created successfully!`);\n      // Optionally, refresh or update your collection list here\n    } catch (error) {\n      setFeedbackMessage(error.message);\n    }\n  };\n  useEffect(() => {\n    const fetchCollections = async () => {\n      let userID = \"1\"; // Or fetch this from a user context or similar\n      try {\n        const response = await fetch('http://localhost:3000/api/image/getUserCollection', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'User-ID': userID // Sending userID in the request header\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch collections');\n        }\n        const collectionsData = await response.json();\n        setCollections(collectionsData);\n      } catch (error) {\n        console.error('Error fetching collections:', error);\n      }\n    };\n    fetchCollections();\n  }, []);\n  useEffect(() => {\n    // FUNCTION to select the user images\n    const fetchImages = async () => {\n      try {\n        let userID = \"1\";\n        // Fetch the images corresponding to the user from the backend API\n        const response = await fetch('http://localhost:3000/api/image/getUserHistoric', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'User-ID': userID\n          }\n        });\n        const UserImages = await response.json();\n        const sortedUserImages = UserImages.sort((a, b) => b.id - a.id);\n        setUserImages(sortedUserImages);\n        setGeneratedImagesCount(UserImages.length);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchImages();\n  }, []);\n  const handleImageClick = async (event, id) => {\n    // Check if the user clicked outside of the modal content\n    if (event.target.className === 'modal') {\n      setClickedImageId(null);\n    } else {\n      setClickedImageId(id);\n    }\n  };\n  const handleDownload = async src => {\n    // Fetch the image data\n    const response = await fetch(src);\n    const blob = await response.blob();\n\n    // Create an object URL for the image data\n    const url = URL.createObjectURL(blob);\n\n    // Create a temporary anchor element and click it to start the download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'image.jpg'; // or any other filename you want\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const handleAddImageToCollection = async imageId => {\n    if (!selectedCollectionForImage) {\n      console.log(\"No collection selected\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3000/api/collection/addImageToCollection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          collectionId: selectedCollectionForImage,\n          imageId: imageId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add image to collection');\n      }\n      console.log(\"Image added to collection successfully\");\n      // Reset the selected collection\n      setSelectedCollectionForImage(null);\n      // Close the modal\n      setClickedImageId(null);\n    } catch (error) {\n      console.error('Error adding image to collection:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileImageUrl,\n        alt: username,\n        className: \"profile-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"username\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"This is the user's profile description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"count-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-number\",\n            children: collectionCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-label\",\n            children: \"Collections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"count-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-number\",\n            children: generatedImagesCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-label\",\n            children: \"Generated Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'collections' ? 'activeLink' : ''}`,\n        id: \"collections-tab\",\n        onClick: () => setActiveTab('collections'),\n        children: \"Collections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'generated' ? 'activeLink' : ''}`,\n        id: \"generated-tab\",\n        onClick: () => setActiveTab('generated'),\n        children: \"Generated Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [activeTab === 'collections' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateCollection,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Collection Name\",\n            value: newCollectionName,\n            onChange: e => setNewCollectionName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), feedbackMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: feedbackMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collections-container\",\n          children: collections.map(collection => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collection-item\",\n            onClick: event => handleCollectionClick(event, collection.id),\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: collection.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this)\n          }, collection.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), clickedCollectionId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: event => handleCollectionClick(event, null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Collection Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this), activeTab === 'generated' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-container\",\n        children: UserImages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No matching images found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"masonry-gallery\",\n          children: UserImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"communityGalleryImages\",\n            onClick: event => handleImageClick(event, image.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url_image,\n              alt: image.prompt,\n              className: \"communityGalleryImage\",\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 41\n            }, this), clickedImageId === image.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal\",\n              onClick: event => handleImageClick(event, image.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-content\",\n                onClick: e => e.stopPropagation(),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal-prompt\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: image.prompt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal-parameters\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Width\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.width\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 62\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Height\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 58\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.height\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 63\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Generation Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 67\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.step\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 72\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Guidance Scale\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 66\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.cfg_scale\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 71\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-image\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    id: image.id,\n                    src: image.url_image,\n                    alt: image.id,\n                    className: \"communityGalleryImage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDownload(image.url_image),\n                    className: \"download-button\",\n                    children: /*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: selectedCollectionForImage,\n                    onChange: e => setSelectedCollectionForImage(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select a Collection\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 53\n                    }, this), collections.map(collection => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: collection.id,\n                      children: collection.name\n                    }, collection.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAddImageToCollection(clickedImageId),\n                    children: \"Add to Collection\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 41\n            }, this)]\n          }, image.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPage, \"NXRUfy6yJvXpw0QPM86uNHhlYbM=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","FaLock","FaLockOpen","FaDownload","jsxDEV","_jsxDEV","UserPage","_s","collectionCount","generatedImagesCount","setGeneratedImagesCount","username","profileImageUrl","activeTab","setActiveTab","newCollectionName","setNewCollectionName","feedbackMessage","setFeedbackMessage","collections","setCollections","clickedCollectionId","setClickedCollectionId","clickedImageId","setClickedImageId","UserImages","setUserImages","selectedCollectionForImage","setSelectedCollectionForImage","handleCollectionClick","event","collectionId","target","className","handleCreateCollection","e","preventDefault","userID","response","fetch","method","headers","body","JSON","stringify","name","idCreator","ok","Error","newCollection","json","error","message","fetchCollections","collectionsData","console","fetchImages","sortedUserImages","sort","a","b","id","length","handleImageClick","handleDownload","src","blob","url","URL","createObjectURL","document","createElement","href","download","appendChild","click","removeChild","handleAddImageToCollection","imageId","log","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","required","map","collection","stopPropagation","image","url_image","prompt","loading","width","height","step","cfg_scale","_c","$RefreshReg$"],"sources":["C:/Users/trist/Documents/DROP/Drop/frontend/client/src/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './UserPage.css';\r\nimport { FaLock, FaLockOpen } from 'react-icons/fa';\r\nimport { FaDownload } from 'react-icons/fa';\r\n\r\nconst UserPage = () => {\r\n    const collectionCount = 10;\r\n    const [generatedImagesCount, setGeneratedImagesCount] = useState(0);\r\n    const username = \"SuperChicken\"; // Username\r\n    const profileImageUrl = \"https://img.freepik.com/vecteurs-premium/conception-mascotte-poulet-fort-dessin-anime_194935-13.jpg\"; // Profile Image URL\r\n    const [activeTab, setActiveTab] = useState('collections'); // State to track active tab\r\n\r\n    const [newCollectionName, setNewCollectionName] = useState('');\r\n    const [feedbackMessage, setFeedbackMessage] = useState('');\r\n\r\n    const [collections, setCollections] = useState([]); \r\n\r\n    const [clickedCollectionId, setClickedCollectionId] = useState(null);\r\n\r\n    const [clickedImageId, setClickedImageId] = useState(null);\r\n    const [UserImages, setUserImages] = useState([]);\r\n    const [selectedCollectionForImage, setSelectedCollectionForImage] = useState(null);\r\n\r\n    const handleCollectionClick = (event, collectionId) => {\r\n        if (event.target.className === 'modal') {\r\n            setClickedCollectionId(null);\r\n        } else {\r\n            setClickedCollectionId(collectionId);\r\n        }\r\n    };\r\n    \r\n    const handleCreateCollection = async (e) => {\r\n        e.preventDefault();\r\n        let userID = \"1\";\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/collection/createCollection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ name: newCollectionName, idCreator: userID }),\r\n            }); \r\n            if (!response.ok) {\r\n                throw new Error('Failed to create collection');\r\n            }\r\n\r\n            const newCollection = await response.json();\r\n            setFeedbackMessage(`Collection \"${newCollection.name}\" created successfully!`);\r\n            // Optionally, refresh or update your collection list here\r\n        } catch (error) {\r\n            setFeedbackMessage(error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchCollections = async () => {\r\n            let userID = \"1\"; // Or fetch this from a user context or similar\r\n            try {\r\n                const response = await fetch('http://localhost:3000/api/image/getUserCollection', {\r\n                    method: 'GET',\r\n                    headers: { \r\n                        'Content-Type': 'application/json',\r\n                        'User-ID': userID // Sending userID in the request header\r\n                    },\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch collections');\r\n                }\r\n                const collectionsData = await response.json();\r\n                setCollections(collectionsData);\r\n            } catch (error) {\r\n                console.error('Error fetching collections:', error);\r\n            }\r\n        };\r\n    \r\n        fetchCollections();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // FUNCTION to select the user images\r\n        const fetchImages = async () => {\r\n            try {\r\n                let userID = \"1\";\r\n                // Fetch the images corresponding to the user from the backend API\r\n                const response = await fetch('http://localhost:3000/api/image/getUserHistoric', {\r\n                    method: 'GET',\r\n                    headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'User-ID': userID\r\n                    },\r\n                });\r\n                const UserImages = await response.json();\r\n                const sortedUserImages = UserImages.sort((a, b) => b.id - a.id);\r\n\r\n                setUserImages(sortedUserImages);\r\n                setGeneratedImagesCount(UserImages.length);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchImages();\r\n    }, []);\r\n\r\n    \r\n    const handleImageClick = async (event, id) => {\r\n        // Check if the user clicked outside of the modal content\r\n        if (event.target.className === 'modal') {\r\n            setClickedImageId(null);\r\n        } else {\r\n            setClickedImageId(id);\r\n        }\r\n    };\r\n\r\n    const handleDownload = async (src) => {\r\n        // Fetch the image data\r\n        const response = await fetch(src);\r\n        const blob = await response.blob();\r\n\r\n        // Create an object URL for the image data\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        // Create a temporary anchor element and click it to start the download\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'image.jpg'; // or any other filename you want\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    };\r\n\r\n    const handleAddImageToCollection = async (imageId) => {\r\n        if (!selectedCollectionForImage) {\r\n            console.log(\"No collection selected\");\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/collection/addImageToCollection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ collectionId: selectedCollectionForImage, imageId: imageId }),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to add image to collection');\r\n            }\r\n    \r\n            console.log(\"Image added to collection successfully\");\r\n            // Reset the selected collection\r\n            setSelectedCollectionForImage(null);\r\n            // Close the modal\r\n            setClickedImageId(null);\r\n        } catch (error) {\r\n            console.error('Error adding image to collection:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n            <div className=\"profile\">\r\n                <img src={profileImageUrl}\r\n                    alt={username}\r\n                    className=\"profile-pic\" />\r\n                <h1 className=\"username\">{username}</h1>\r\n                <p className=\"description\">This is the user's profile description.</p>\r\n                <div className=\"counts\">\r\n                    <div className=\"count-item\">\r\n                        <span className=\"count-number\">{collectionCount}</span>\r\n                        <span className=\"count-label\">Collections</span>\r\n                    </div>\r\n                    <div className=\"count-item\">\r\n                        <span className=\"count-number\">{generatedImagesCount}</span>\r\n                        <span className=\"count-label\">Generated Images</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"tabs\">\r\n                <button\r\n                    className={`tab-button ${activeTab === 'collections' ? 'activeLink' : ''}`}\r\n                    id=\"collections-tab\"\r\n                    onClick={() => setActiveTab('collections')}\r\n                >\r\n                    Collections\r\n                </button>\r\n                <button\r\n                    className={`tab-button ${activeTab === 'generated' ? 'activeLink' : ''}`}\r\n                    id=\"generated-tab\"\r\n                    onClick={() => setActiveTab('generated')}\r\n                >\r\n                    Generated Images\r\n                </button>\r\n            </div>\r\n            <div className=\"content\">\r\n                {activeTab === 'collections' && (\r\n                    <div>\r\n                        <form onSubmit={handleCreateCollection}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Collection Name\"\r\n                                value={newCollectionName}\r\n                                onChange={(e) => setNewCollectionName(e.target.value)}\r\n                                required\r\n                            />\r\n                            <button type=\"submit\">Create Collection</button>\r\n                        </form>\r\n                        {feedbackMessage && <p>{feedbackMessage}</p>}\r\n                        <div className=\"collections-container\">\r\n                            {collections.map(collection => (\r\n                                <div key={collection.id} className=\"collection-item\" onClick={(event) => handleCollectionClick(event, collection.id)}>\r\n                                    <h3>{collection.name}</h3>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {clickedCollectionId && (\r\n                    <div className=\"modal\" onClick={(event) => handleCollectionClick(event, null)}>\r\n                        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                            <h2>Collection Details</h2>\r\n                            {/* Collection details and images will be displayed here */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'generated' && (\r\n                    <div className=\"gallery-container\">\r\n                        {UserImages.length === 0 ? (\r\n                            <p>No matching images found.</p>\r\n                        ) : (\r\n                            <div className=\"masonry-gallery\">\r\n                                {UserImages.map((image) => (\r\n                                    <div className=\"communityGalleryImages\" onClick={(event) => handleImageClick(event, image.id)} key={image.id}>\r\n                                        <img\r\n                                            src={image.url_image}\r\n                                            alt={image.prompt}\r\n                                            className=\"communityGalleryImage\"\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                        {clickedImageId === image.id && \r\n                                        <div className=\"modal\" onClick={(event) => handleImageClick(event, image.id)}>\r\n                                            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                                            <div className=\"modal-text\">\r\n                                                <div className=\"modal-prompt\">\r\n                                                <p>{image.prompt}</p>\r\n                                                </div>\r\n                                                <div className=\"modal-parameters\">\r\n                                                <p>Width<br/><span>{image.width}</span></p>\r\n                                                <p>Height<br/><span>{image.height}</span></p>\r\n                                                <p>Generation Step<br/><span>{image.step}</span></p>\r\n                                                <p>Guidance Scale<br/><span>{image.cfg_scale}</span></p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"modal-image\">\r\n                                                <img\r\n                                                id={image.id}\r\n                                                src={image.url_image}\r\n                                                alt={image.id}\r\n                                                className=\"communityGalleryImage\"\r\n                                                />\r\n                                                <button onClick={() => handleDownload(image.url_image)} className=\"download-button\">\r\n                                                <FaDownload />\r\n                                                </button>\r\n                                                {/* Dropdown to select a collection */}\r\n                                                <select value={selectedCollectionForImage} onChange={(e) => setSelectedCollectionForImage(e.target.value)}>\r\n                                                    <option value=\"\">Select a Collection</option>\r\n                                                    {collections.map((collection) => (\r\n                                                        <option key={collection.id} value={collection.id}>{collection.name}</option>\r\n                                                    ))}\r\n                                                </select>\r\n\r\n                                                {/* Button to add image to collection */}\r\n                                                <button onClick={() => handleAddImageToCollection(clickedImageId)}>Add to Collection</button>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}