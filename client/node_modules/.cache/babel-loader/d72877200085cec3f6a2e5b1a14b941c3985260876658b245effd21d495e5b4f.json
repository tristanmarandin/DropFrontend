{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trist\\\\Documents\\\\DROP\\\\Drop\\\\frontend\\\\client\\\\src\\\\UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './UserPage.css';\nimport { FaRegTrashAlt } from 'react-icons/fa';\nimport { FaLock, FaLockOpen } from 'react-icons/fa';\nimport { FaDownload } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const [collectionCount, setCollectionCount] = useState(0);\n  const [generatedImagesCount, setGeneratedImagesCount] = useState(0);\n  const username = \"SuperChicken\"; // Username\n  const profileImageUrl = \"https://img.freepik.com/vecteurs-premium/conception-mascotte-poulet-fort-dessin-anime_194935-13.jpg\"; // Profile Image URL\n  const [activeTab, setActiveTab] = useState('collections'); // State to track active tab\n\n  const [isCreateModalVisible, setIsCreateModalVisible] = useState(false);\n  const [newCollectionName, setNewCollectionName] = useState('');\n  const [feedbackMessage, setFeedbackMessage] = useState('');\n  const [collections, setCollections] = useState([]);\n  const [clickedCollectionId, setClickedCollectionId] = useState(null);\n  const [collectionImages, setCollectionImages] = useState([]);\n  const [clickedImageId, setClickedImageId] = useState(null);\n  const [UserImages, setUserImages] = useState([]);\n  const [selectedCollectionForImage, setSelectedCollectionForImage] = useState(null);\n  const [isCreatingCollection, setIsCreatingCollection] = useState(false);\n  const handleCollectionClick = async (event, collectionId) => {\n    if (event.target.className === 'modal') {\n      setClickedCollectionId(null);\n      setCollectionImages([]); // Reset images when closing the modal\n    } else {\n      setClickedCollectionId(collectionId);\n      await fetchCollectionImages(collectionId); // Fetch images for the clicked collection\n    }\n  };\n\n  const openCreateModal = () => {\n    setIsCreateModalVisible(true);\n  };\n  const handleBackdropClick = event => {\n    // Using currentTarget ensures that this only triggers if you've actually clicked on the backdrop, not its children\n    if (event.currentTarget === event.target) {\n      setIsCreateModalVisible(false);\n    }\n  };\n  const handleCreateCollection = async e => {\n    e.preventDefault();\n    setIsCreateModalVisible(false);\n    let userID = \"1\";\n    try {\n      const response = await fetch('http://localhost:3000/api/collection/createCollection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newCollectionName,\n          idCreator: userID\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create collection');\n      }\n      const newCollection = await response.json();\n      setFeedbackMessage(`Collection \"${newCollection.name}\" created successfully!`);\n      // Refresh\n      fetchCollections();\n    } catch (error) {\n      setFeedbackMessage(error.message);\n    }\n  };\n  useEffect(() => {\n    const fetchCollections = async () => {\n      console.log(sessionStorage);\n      try {\n        const response = await fetch('http://localhost:3000/api/image/getUserCollection', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'User-ID': String(sessionStorage.getItem('username'))\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch collections');\n        }\n        const UserCollections = await response.json();\n        setCollections(UserCollections);\n        setCollectionCount(UserCollections.length);\n      } catch (error) {\n        console.error('Error fetching collections:', error);\n      }\n    };\n    fetchCollections();\n  }, []);\n  const fetchCollectionImages = async collectionId => {\n    try {\n      const response = await fetch('http://localhost:3000/api/collection/getImagesOfCollection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          collectionId: collectionId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch collection images');\n      }\n      const images = await response.json();\n      setCollectionImages(images);\n    } catch (error) {\n      console.error('Error fetching collection images:', error);\n      setCollectionImages([]);\n    }\n  };\n  useEffect(() => {\n    // FUNCTION to select the user images\n    const fetchImages = async () => {\n      try {\n        // Fetch the images corresponding to the user from the backend API\n        const response = await fetch('http://localhost:3000/api/image/getUserHistoric', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'User-ID': String(sessionStorage.getItem('username'))\n          }\n        });\n        const UserImages = await response.json();\n        const sortedUserImages = UserImages.sort((a, b) => b.id - a.id);\n        setUserImages(sortedUserImages);\n        setGeneratedImagesCount(UserImages.length);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchImages();\n  }, []);\n  const handleImageClick = async (event, id) => {\n    // Check if the user clicked outside of the modal content\n    if (event.target.className === 'modal') {\n      setClickedImageId(null);\n    } else {\n      setClickedImageId(id);\n    }\n  };\n  const handleDownload = async src => {\n    // Fetch the image data\n    const response = await fetch(src);\n    const blob = await response.blob();\n\n    // Create an object URL for the image data\n    const url = URL.createObjectURL(blob);\n\n    // Create a temporary anchor element and click it to start the download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'image.jpg'; // or any other filename you want\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const handleAddImageToCollection = async imageId => {\n    if (!selectedCollectionForImage) {\n      console.log(\"No collection selected\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3000/api/collection/addImageToCollection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          collectionId: selectedCollectionForImage,\n          imageId: imageId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add image to collection');\n      }\n      console.log(\"Image added to collection successfully\");\n      // Reset the selected collection\n      setSelectedCollectionForImage(null);\n      // Close the modal\n      setClickedImageId(null);\n    } catch (error) {\n      console.error('Error adding image to collection:', error);\n    }\n  };\n  const handleRemoveImageFromCollection = async imageId => {\n    try {\n      const response = await fetch('http://localhost:3000/api/collection/removeImageFromCollection', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          collectionId: clickedCollectionId,\n          imageId: imageId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to remove image from collection');\n      }\n      console.log(\"Image removed from collection successfully\");\n      // Optionally, refresh the collection images here\n      await fetchCollectionImages(clickedCollectionId);\n    } catch (error) {\n      console.error('Error removing image from collection:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileImageUrl,\n        alt: username,\n        className: \"profile-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"username\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"This is the user's profile description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"count-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-number\",\n            children: collectionCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-label\",\n            children: \"Collections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"count-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-number\",\n            children: generatedImagesCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-label\",\n            children: \"Generated Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'collections' ? 'activeLink' : ''}`,\n        id: \"collections-tab\",\n        onClick: () => setActiveTab('collections'),\n        children: \"Collections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'generated' ? 'activeLink' : ''}`,\n        id: \"generated-tab\",\n        onClick: () => setActiveTab('generated'),\n        children: \"Generated Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [activeTab === 'collections' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collections-line\",\n          children: [collections.map(collection => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collection-item\",\n            onClick: event => handleCollectionClick(event, collection.id),\n            children: [collection.images && collection.images.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: collection.images[0].url,\n              alt: collection.name,\n              className: \"collection-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placeholder-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"collection-name\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: collection.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this)]\n          }, collection.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collection-item create-collection\",\n            onClick: openCreateModal,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placeholder-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), isCreateModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-collection-modal-backdrop\",\n            onClick: handleBackdropClick,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-collection-modal\",\n              onClick: e => e.stopPropagation(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-collection-modal-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Cr\\xE9er une collection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleCreateCollection,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-collection-modal-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"collectionName\",\n                    children: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"collectionName\",\n                    type: \"text\",\n                    placeholder: \"Ex.: \\xAB Style Miyazaki \\xBB ou \\xAB Tatouages Maoris \\xBB\",\n                    value: newCollectionName,\n                    onChange: e => setNewCollectionName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-collection-modal-footer\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"create-collection-modal-button\",\n                    children: \"Cr\\xE9er\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this), clickedCollectionId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: event => handleCollectionClick(event, null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Collection Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collection-masonry-gallery\",\n            children: collectionImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collection-image-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.url_image,\n                alt: image.prompt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {\n                className: \"remove-icon\",\n                onClick: () => handleRemoveImageFromCollection(image.id),\n                title: \"Remove from Collection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 41\n              }, this)]\n            }, image.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), activeTab === 'generated' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-container\",\n        children: UserImages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No matching images found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"masonry-gallery\",\n          children: UserImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"communityGalleryImages\",\n            onClick: event => handleImageClick(event, image.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url_image,\n              alt: image.prompt,\n              className: \"communityGalleryImage\",\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 41\n            }, this), clickedImageId === image.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal\",\n              onClick: event => handleImageClick(event, image.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-content\",\n                onClick: e => e.stopPropagation(),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal-prompt\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: image.prompt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal-parameters\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Width\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.width\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 62\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Height\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 58\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.height\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 63\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Generation Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 67\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.step\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 72\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Guidance Scale\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 66\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: image.cfg_scale\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 71\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-image\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    id: image.id,\n                    src: image.url_image,\n                    alt: image.id,\n                    className: \"communityGalleryImage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDownload(image.url_image),\n                    className: \"download-button\",\n                    children: /*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: selectedCollectionForImage,\n                    onChange: e => setSelectedCollectionForImage(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select a Collection\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 53\n                    }, this), collections.map(collection => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: collection.id,\n                      children: collection.name\n                    }, collection.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAddImageToCollection(clickedImageId),\n                    children: \"Add to Collection\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 41\n            }, this)]\n          }, image.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPage, \"AvZxcBYdtDGm/X2A++o0L2dtj7I=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","FaRegTrashAlt","FaLock","FaLockOpen","FaDownload","jsxDEV","_jsxDEV","UserPage","_s","collectionCount","setCollectionCount","generatedImagesCount","setGeneratedImagesCount","username","profileImageUrl","activeTab","setActiveTab","isCreateModalVisible","setIsCreateModalVisible","newCollectionName","setNewCollectionName","feedbackMessage","setFeedbackMessage","collections","setCollections","clickedCollectionId","setClickedCollectionId","collectionImages","setCollectionImages","clickedImageId","setClickedImageId","UserImages","setUserImages","selectedCollectionForImage","setSelectedCollectionForImage","isCreatingCollection","setIsCreatingCollection","handleCollectionClick","event","collectionId","target","className","fetchCollectionImages","openCreateModal","handleBackdropClick","currentTarget","handleCreateCollection","e","preventDefault","userID","response","fetch","method","headers","body","JSON","stringify","name","idCreator","ok","Error","newCollection","json","fetchCollections","error","message","console","log","sessionStorage","String","getItem","UserCollections","length","images","fetchImages","sortedUserImages","sort","a","b","id","handleImageClick","handleDownload","src","blob","url","URL","createObjectURL","document","createElement","href","download","appendChild","click","removeChild","handleAddImageToCollection","imageId","handleRemoveImageFromCollection","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","collection","stopPropagation","onSubmit","htmlFor","type","placeholder","value","onChange","image","url_image","prompt","title","loading","width","height","step","cfg_scale","_c","$RefreshReg$"],"sources":["C:/Users/trist/Documents/DROP/Drop/frontend/client/src/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './UserPage.css';\r\nimport { FaRegTrashAlt   } from 'react-icons/fa';\r\nimport { FaLock, FaLockOpen } from 'react-icons/fa';\r\nimport { FaDownload } from 'react-icons/fa';\r\n\r\nconst UserPage = () => {\r\n    const [collectionCount, setCollectionCount] = useState(0);\r\n    const [generatedImagesCount, setGeneratedImagesCount] = useState(0);\r\n    const username = \"SuperChicken\"; // Username\r\n    const profileImageUrl = \"https://img.freepik.com/vecteurs-premium/conception-mascotte-poulet-fort-dessin-anime_194935-13.jpg\"; // Profile Image URL\r\n    const [activeTab, setActiveTab] = useState('collections'); // State to track active tab\r\n\r\n    const [isCreateModalVisible, setIsCreateModalVisible] = useState(false);\r\n    const [newCollectionName, setNewCollectionName] = useState('');\r\n    const [feedbackMessage, setFeedbackMessage] = useState('');\r\n\r\n    const [collections, setCollections] = useState([]); \r\n\r\n    const [clickedCollectionId, setClickedCollectionId] = useState(null);\r\n    const [collectionImages, setCollectionImages] = useState([]);\r\n\r\n    const [clickedImageId, setClickedImageId] = useState(null);\r\n    const [UserImages, setUserImages] = useState([]);\r\n    const [selectedCollectionForImage, setSelectedCollectionForImage] = useState(null);\r\n\r\n    const [isCreatingCollection, setIsCreatingCollection] = useState(false);\r\n\r\n    const handleCollectionClick = async (event, collectionId) => {\r\n        if (event.target.className === 'modal') {\r\n            setClickedCollectionId(null);\r\n            setCollectionImages([]); // Reset images when closing the modal\r\n        } else {\r\n            setClickedCollectionId(collectionId);\r\n            await fetchCollectionImages(collectionId); // Fetch images for the clicked collection\r\n        }\r\n    };\r\n\r\n    const openCreateModal = () => {\r\n        setIsCreateModalVisible(true);\r\n    };\r\n\r\n    const handleBackdropClick = (event) => {\r\n        // Using currentTarget ensures that this only triggers if you've actually clicked on the backdrop, not its children\r\n        if (event.currentTarget === event.target) {\r\n            setIsCreateModalVisible(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateCollection = async (e) => {\r\n        e.preventDefault();\r\n        setIsCreateModalVisible(false);\r\n        let userID = \"1\";\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/collection/createCollection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ name: newCollectionName, idCreator: userID }),\r\n            }); \r\n            if (!response.ok) {\r\n                throw new Error('Failed to create collection');\r\n            }\r\n\r\n            const newCollection = await response.json();\r\n            setFeedbackMessage(`Collection \"${newCollection.name}\" created successfully!`);\r\n            // Refresh\r\n            fetchCollections();\r\n        } catch (error) {\r\n            setFeedbackMessage(error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchCollections = async () => {\r\n            console.log(sessionStorage);\r\n            try {\r\n                const response = await fetch('http://localhost:3000/api/image/getUserCollection', {\r\n                    method: 'GET',\r\n                    headers: { \r\n                        'Content-Type': 'application/json',\r\n                        'User-ID': String(sessionStorage.getItem('username'))\r\n                    },\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch collections');\r\n                }\r\n                const UserCollections = await response.json();\r\n                setCollections(UserCollections);\r\n                setCollectionCount(UserCollections.length);\r\n            } catch (error) {\r\n                console.error('Error fetching collections:', error);\r\n            }\r\n        };\r\n    \r\n        fetchCollections();\r\n    }, []);\r\n\r\n    const fetchCollectionImages = async (collectionId) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/collection/getImagesOfCollection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ collectionId: collectionId }),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch collection images');\r\n            }\r\n    \r\n            const images = await response.json();\r\n            setCollectionImages(images);\r\n        } catch (error) {\r\n            console.error('Error fetching collection images:', error);\r\n            setCollectionImages([]);\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        // FUNCTION to select the user images\r\n        const fetchImages = async () => {\r\n            try {\r\n                // Fetch the images corresponding to the user from the backend API\r\n                const response = await fetch('http://localhost:3000/api/image/getUserHistoric', {\r\n                    method: 'GET',\r\n                    headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'User-ID': String(sessionStorage.getItem('username'))\r\n                    },\r\n                });\r\n                const UserImages = await response.json();\r\n                const sortedUserImages = UserImages.sort((a, b) => b.id - a.id);\r\n\r\n                setUserImages(sortedUserImages);\r\n                setGeneratedImagesCount(UserImages.length);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchImages();\r\n    }, []);\r\n\r\n    \r\n    const handleImageClick = async (event, id) => {\r\n        // Check if the user clicked outside of the modal content\r\n        if (event.target.className === 'modal') {\r\n            setClickedImageId(null);\r\n        } else {\r\n            setClickedImageId(id);\r\n        }\r\n    };\r\n\r\n    const handleDownload = async (src) => {\r\n        // Fetch the image data\r\n        const response = await fetch(src);\r\n        const blob = await response.blob();\r\n\r\n        // Create an object URL for the image data\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        // Create a temporary anchor element and click it to start the download\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'image.jpg'; // or any other filename you want\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    };\r\n\r\n    const handleAddImageToCollection = async (imageId) => {\r\n        if (!selectedCollectionForImage) {\r\n            console.log(\"No collection selected\");\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/collection/addImageToCollection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ collectionId: selectedCollectionForImage, imageId: imageId }),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to add image to collection');\r\n            }\r\n    \r\n            console.log(\"Image added to collection successfully\");\r\n            // Reset the selected collection\r\n            setSelectedCollectionForImage(null);\r\n            // Close the modal\r\n            setClickedImageId(null);\r\n        } catch (error) {\r\n            console.error('Error adding image to collection:', error);\r\n        }\r\n    };\r\n\r\n    const handleRemoveImageFromCollection = async (imageId) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/collection/removeImageFromCollection', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ collectionId: clickedCollectionId, imageId: imageId }),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to remove image from collection');\r\n            }\r\n    \r\n            console.log(\"Image removed from collection successfully\");\r\n            // Optionally, refresh the collection images here\r\n            await fetchCollectionImages(clickedCollectionId);\r\n        } catch (error) {\r\n            console.error('Error removing image from collection:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n            <div className=\"profile\">\r\n                <img src={profileImageUrl}\r\n                    alt={username}\r\n                    className=\"profile-pic\" />\r\n                <h1 className=\"username\">{username}</h1>\r\n                <p className=\"description\">This is the user's profile description.</p>\r\n                <div className=\"counts\">\r\n                    <div className=\"count-item\">\r\n                        <span className=\"count-number\">{collectionCount}</span>\r\n                        <span className=\"count-label\">Collections</span>\r\n                    </div>\r\n                    <div className=\"count-item\">\r\n                        <span className=\"count-number\">{generatedImagesCount}</span>\r\n                        <span className=\"count-label\">Generated Images</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"tabs\">\r\n                <button\r\n                    className={`tab-button ${activeTab === 'collections' ? 'activeLink' : ''}`}\r\n                    id=\"collections-tab\"\r\n                    onClick={() => setActiveTab('collections')}\r\n                >\r\n                    Collections\r\n                </button>\r\n                <button\r\n                    className={`tab-button ${activeTab === 'generated' ? 'activeLink' : ''}`}\r\n                    id=\"generated-tab\"\r\n                    onClick={() => setActiveTab('generated')}\r\n                >\r\n                    Generated Images\r\n                </button>\r\n            </div>\r\n            <div className=\"content\">\r\n                {activeTab === 'collections' && (\r\n                    <div>\r\n                        <div className=\"collections-line\">\r\n                        {collections.map(collection => (\r\n                            <div key={collection.id} className=\"collection-item\" onClick={(event) => handleCollectionClick(event, collection.id)}>\r\n                                {collection.images && collection.images.length > 0 ? (\r\n                                    <img src={collection.images[0].url} alt={collection.name} className=\"collection-image\"/>\r\n                                ) : (\r\n                                    <div className=\"placeholder-image\"></div>\r\n                                )}\r\n                                <h3 className=\"collection-name\"><strong>{collection.name}</strong></h3>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <div className=\"collection-item create-collection\" onClick={openCreateModal}>\r\n                            <div className=\"placeholder-image\"></div>\r\n                        </div>\r\n\r\n                        {isCreateModalVisible && (\r\n                            <div className=\"create-collection-modal-backdrop\" onClick={handleBackdropClick}>\r\n                                <div className=\"create-collection-modal\" onClick={(e) => e.stopPropagation()}>\r\n                                    <div className=\"create-collection-modal-header\">\r\n                                        <h2>Créer une collection</h2>\r\n                                    </div>\r\n                                    <form onSubmit={handleCreateCollection}>\r\n                                        <div className=\"create-collection-modal-body\">\r\n                                            <label htmlFor=\"collectionName\">Nom</label>\r\n                                            <input\r\n                                                id=\"collectionName\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Ex.: « Style Miyazaki » ou « Tatouages Maoris »\"\r\n                                                value={newCollectionName}\r\n                                                onChange={(e) => setNewCollectionName(e.target.value)}\r\n                                            />\r\n                                            {/* Other form elements */}\r\n                                        </div>\r\n                                        <div className=\"create-collection-modal-footer\">\r\n                                            <button type=\"submit\" className=\"create-collection-modal-button\">Créer</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {clickedCollectionId && (\r\n                    <div className=\"modal\" onClick={(event) => handleCollectionClick(event, null)}>\r\n                        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                            <div className=\"modal-header\">\r\n                                <h2>Collection Details</h2>\r\n                                <hr />\r\n                            </div>\r\n                            \r\n                            <div className=\"collection-masonry-gallery\">\r\n                                {collectionImages.map((image) => (\r\n                                    <div key={image.id} className=\"collection-image-item\">\r\n                                        <img src={image.url_image} alt={image.prompt} />\r\n                                        <FaRegTrashAlt   \r\n                                            className=\"remove-icon\"\r\n                                            onClick={() => handleRemoveImageFromCollection(image.id)}\r\n                                            title=\"Remove from Collection\"\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'generated' && (\r\n                    <div className=\"gallery-container\">\r\n                        {UserImages.length === 0 ? (\r\n                            <p>No matching images found.</p>\r\n                        ) : (\r\n                            <div className=\"masonry-gallery\">\r\n                                {UserImages.map((image) => (\r\n                                    <div className=\"communityGalleryImages\" onClick={(event) => handleImageClick(event, image.id)} key={image.id}>\r\n                                        <img\r\n                                            src={image.url_image}\r\n                                            alt={image.prompt}\r\n                                            className=\"communityGalleryImage\"\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                        {clickedImageId === image.id && \r\n                                        <div className=\"modal\" onClick={(event) => handleImageClick(event, image.id)}>\r\n                                            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                                            <div className=\"modal-text\">\r\n                                                <div className=\"modal-prompt\">\r\n                                                <p>{image.prompt}</p>\r\n                                                </div>\r\n                                                <div className=\"modal-parameters\">\r\n                                                <p>Width<br/><span>{image.width}</span></p>\r\n                                                <p>Height<br/><span>{image.height}</span></p>\r\n                                                <p>Generation Step<br/><span>{image.step}</span></p>\r\n                                                <p>Guidance Scale<br/><span>{image.cfg_scale}</span></p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"modal-image\">\r\n                                                <img\r\n                                                id={image.id}\r\n                                                src={image.url_image}\r\n                                                alt={image.id}\r\n                                                className=\"communityGalleryImage\"\r\n                                                />\r\n                                                <button onClick={() => handleDownload(image.url_image)} className=\"download-button\">\r\n                                                <FaDownload />\r\n                                                </button>\r\n                                                {/* Dropdown to select a collection */}\r\n                                                <select value={selectedCollectionForImage} onChange={(e) => setSelectedCollectionForImage(e.target.value)}>\r\n                                                    <option value=\"\">Select a Collection</option>\r\n                                                    {collections.map((collection) => (\r\n                                                        <option key={collection.id} value={collection.id}>{collection.name}</option>\r\n                                                    ))}\r\n                                                </select>\r\n\r\n                                                {/* Button to add image to collection */}\r\n                                                <button onClick={() => handleAddImageToCollection(clickedImageId)}>Add to Collection</button>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}