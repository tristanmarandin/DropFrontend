{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trist\\\\Documents\\\\DROP\\\\Drop\\\\frontend\\\\client\\\\src\\\\PaymentProgress.js\";\nimport React from 'react';\nimport { Box, LinearProgress, Typography } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentProgress = _ref => {\n  let {\n    step\n  } = _ref;\n  const steps = ['Sites selected', 'Payment received', 'Processing report'];\n  const stepToValue = {\n    'Sites selected': 33,\n    'Payment received': 66,\n    'Processing report': 100\n  };\n  const value = stepToValue[step];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: [index <= steps.indexOf(step) ? /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(AutorenewIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), label]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = PaymentProgress;\nexport default PaymentProgress;\nvar _c;\n$RefreshReg$(_c, \"PaymentProgress\");","map":{"version":3,"names":["React","Box","LinearProgress","Typography","CheckCircleOutlineIcon","AutorenewIcon","jsxDEV","_jsxDEV","PaymentProgress","_ref","step","steps","stepToValue","value","sx","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","map","label","index","color","indexOf","_c","$RefreshReg$"],"sources":["C:/Users/trist/Documents/DROP/Drop/frontend/client/src/PaymentProgress.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, LinearProgress, Typography } from '@mui/material';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\r\n\r\nconst PaymentProgress = ({ step }) => {\r\n  const steps = [\r\n    'Sites selected',\r\n    'Payment received',\r\n    'Processing report',\r\n  ];\r\n\r\n  const stepToValue = {\r\n    'Sites selected': 33,\r\n    'Payment received': 66,\r\n    'Processing report': 100,\r\n  };\r\n\r\n  const value = stepToValue[step];\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgress variant=\"determinate\" value={value} />\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        {steps.map((label, index) => (\r\n          <Typography key={label} variant=\"body2\" color=\"textSecondary\">\r\n            {index <= steps.indexOf(step) ? (\r\n              <CheckCircleOutlineIcon color=\"success\" />\r\n            ) : (\r\n              <AutorenewIcon color=\"action\" />\r\n            )}\r\n            {label}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentProgress;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,cAAc,EAAEC,UAAU,QAAQ,eAAe;AAC/D,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,eAAe,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAC/B,MAAME,KAAK,GAAG,CACZ,gBAAgB,EAChB,kBAAkB,EAClB,mBAAmB,CACpB;EAED,MAAMC,WAAW,GAAG;IAClB,gBAAgB,EAAE,EAAE;IACpB,kBAAkB,EAAE,EAAE;IACtB,mBAAmB,EAAE;EACvB,CAAC;EAED,MAAMC,KAAK,GAAGD,WAAW,CAACF,IAAI,CAAC;EAE/B,oBACEH,OAAA,CAACN,GAAG;IAACa,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACzBT,OAAA,CAACL,cAAc;MAACe,OAAO,EAAC,aAAa;MAACJ,KAAK,EAAEA;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDd,OAAA,CAACN,GAAG;MAACa,EAAE,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAgB,CAAE;MAAAP,QAAA,EAC3DL,KAAK,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtBnB,OAAA,CAACJ,UAAU;QAAac,OAAO,EAAC,OAAO;QAACU,KAAK,EAAC,eAAe;QAAAX,QAAA,GAC1DU,KAAK,IAAIf,KAAK,CAACiB,OAAO,CAAClB,IAAI,CAAC,gBAC3BH,OAAA,CAACH,sBAAsB;UAACuB,KAAK,EAAC;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE1Cd,OAAA,CAACF,aAAa;UAACsB,KAAK,EAAC;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAChC,EACAI,KAAK;MAAA,GANSA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACQ,EAAA,GAhCIrB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}